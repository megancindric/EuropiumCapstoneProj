@model WalkaboutProj.Models.TakeAWalkViewModel

@{
    ViewData["Title"] = "TakeAWalk";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

<div class="container-fluid">
    <input id="hiddenRouteI" type="hidden" name="hiddenRouteId" />
    <input id="totalTimeMinutes" type="hidden" name="totalTimeMinutes" />
    <input id="totalDistanceMI" type="hidden" name="totalDistanceKM" />
    <input id="totalDistanceKM" type="hidden" name="totalDistanceMI" />
    <input id="walkStartTime" type="hidden" name="walkStartTime" />
    <input id="unitPreference" type="hidden" name="unitPreference" value="@Model.Wanderer.UnitPreference" />

    <div class="jumbotron-fluid">
        <h2 class="display-3" style="text-align : center">Let's take a walk!</h2>
        <hr class="my-sm-4">
        <div class="col text-center">

            <button type="button" class="btn btn-secondary btn-lg" data-toggle="collapse" id="startYourWalk " onclick="createNewRoute(@Model.Wanderer.WandererId); this.style.display = 'none'" data-target="#createMarkersMap, #markerTable, #pointsDisplay">Start your walk!</button>
        </div>
        <div class="container-fluid">
            <div class="row collapse align-items-center justify-content-center" id="pointsDisplay">
                <form>
                    <div class="form-group">
                        <h4>Your total points:</h4>
                        <input style="border:none; width:inherit; text-align:center" readonly="" class="form-control" id="totalPoints" name="totalPoints" />

                    </div>
                </form>
            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-md-6 collapse" style="text-align:center" id="createMarkersMap">
            <div class="col text-center">
                <button type="button" class="btn btn-secondary btn-lg" data-toggle="collapse" id="endYourWalk" onclick="prepareRouteWaypoints()" data-target="#routeDetails,#createMarkersMap,#routeMap">End your walk!</button>
                @*On click, this button will need to pass in total time in minutes and total distance KM*@
            </div>
            <br />
            <div id="map"></div>
        </div>
        <div class="col-md-6 collapse" id="routeMap">
            <div id="map2"></div>
        </div>
        <div class="col-md-6 collapse" id="routeDetails">


            <form id="edit-route">
                <h3>Create your Route</h3>
                <table class="table table-primary" style="text-align:center">
                    <thead>
                        <tr>
                            <th>
                                Total points:
                            </th>
                            <th>
                                Total time (minutes):
                            </th>
                            <th>
                                Total Distance (@Model.Wanderer.UnitPreference):
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <th id="totalPointsDisplay">

                            </th>
                            <th id="totalTimeMinutesDisplay">

                            </th>
                            @if (Model.Wanderer.UnitPreference == "MI")
                            {
                                <th id="totalDistanceMIDisplay">

                                </th>
                            }
                            else
                            {
                                <th id="totalDistanceKMDisplay">

                                </th>

                            }

                        </tr>
                    </tbody>
                </table>




                <div class="form-group">
                    <label for="editMarkerDescription">Name your route:   </label>
                    <input id="editRouteName" name="editRouteName" />
                </div>
                <div class="form-group">
                    <label for="editRouteDescription">Enter a description:</label>
                    <textarea class="form-control" rows="2" id="editRouteDescription">
                 </textarea>
                </div>
                <div class="form-group">
                    <input class="star star-5" value="5" id="star-5" type="radio" name="starValue" />
                    <label class="star star-5" for="star-5"></label>
                    <input class="star star-4" value="4" id="star-4" type="radio" name="starValue" />
                    <label class="star star-4" for="star-4"></label>
                    <input class="star star-3" value="3" id="star-3" type="radio" name="starValue" />
                    <label class="star star-3" for="star-3"></label>
                    <input class="star star-2" value="2" id="star-2" type="radio" name="starValue" />
                    <label class="star star-2" for="star-2"></label>
                    <input class="star star-1" value="1" id="star-1" type="radio" name="starValue" />
                    <label class="star star-1" for="star-1"></label>
                </div>
                <button type="button" class="btn btn-outline-secondary btn-sm" onclick="updateRoute()">Save this Route:</button>
            </form>
        </div>

        <div class="col-md-6 collapse" id="markerTable">
            <h4 style="text-align:center">My Current Markers:</h4>
            <table class="table table-primary">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Category</th>
                        <th>Description</th>
                        <th>Edit</th>
                        <th>Delete</th>
                    </tr>
                </thead>
                <tbody class="table table-primary" id="markerTableBody"></tbody>
            </table>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6 collapse" id="editMarkerForm">
            <form id="edit-marker">
                <h3>Edit this Marker</h3>
                <div class="form-group">
                    <input id="hiddenMarkerId" name="hiddenMarkerId" type="hidden" />
                </div>
                <div class="form-group">
                    <input id="hiddenRouteId" name="hiddenRouteId" type="hidden" />
                </div>
                <div class="form-group">
                    <input id="hiddenIsFavorite" name="hiddenIsFavorite" type="hidden" />
                </div>
                <div class="form-group">
                    <input id="hiddenPointValue" name="hiddenPointValue" type="hidden" />
                </div>
                <div class="form-group">
                    <input id="hiddenMarkerLat" name="hiddenMarkerLat" type="hidden" />
                </div>
                <div class="form-group">
                    <input id="hiddenMarkerLong" name="hiddenMarkerLong" type="hidden" />
                </div>
                <div class="form-group">
                    <input id="hiddenPicturePath" name="hiddenPicturePath" type="hidden" />
                </div>
                <div class="form-group">
                    <input class="form-control" type="text" placeholder="Marker Name" id="editMarkerName" />
                </div>
                <div class="form-group">
                    <select class="form-control form-control-sm" id="editMarkerCategory">
                        <option value="" disabled selected hidden>Select a Category</option>
                        <option value="StartPoint">Starting Point</option>
                        <option value="Wildlife">Wildlife</option>
                        <option value="Landmark">Landmark</option>
                        <option value="Highlight">Highlight</option>
                        <option value="EndPoint">Ending Point</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="editMarkerDescription">Enter a description:</label>
                    <textarea class="form-control" id="editMarkerDescription" placeholder="Enter a description" rows="2">
                 </textarea>
                </div>
                <button type="button" class="btn btn-outline-secondary btn-sm" data-toggle="collapse" data-target="#editMarkerForm" onclick="updateMarker()">Update this Marker:</button>
            </form>
        </div>
    </div>
</div>
<script async defer src="@APIKeys.APIURL"></script>
<script src="~/Scripts/TakeAWalk.js"></script>
<script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js"></script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>

<script>
    var currentLocation = { lat: @Model.WandererLat, lng: @Model.WandererLong };
    var map;
    var map2;
    var directionsService;
    var directionsRenderer;

    var icons = {
        StartPoint: {
            icon: 'http://maps.google.com/mapfiles/kml/paddle/go.png'
        },
        EndPoint: {
            icon: 'http://maps.google.com/mapfiles/kml/paddle/grn-square.png'
        },
        Wildlife: {
            icon: 'https://www.gstatic.com/earth/images/stockicons/190201-2016-animal-paw_4x.png'
        },
        Landmark: {
            icon: 'http://maps.google.com/mapfiles/kml/paddle/red-diamond.png'
        },
        Highlight: {
            icon: 'http://maps.google.com/mapfiles/kml/paddle/red-stars.png'
        }
    };

    var pointValues = {
        StartPoint: {
            pointValue: 0
        },
        EndPoint: {
            pointValue: 0
        },
        Wildlife: {
            pointValue: 10
        },
        Landmark: {
            pointValue: 8
        },
        Highlight: {
            pointValue: 5
        }
    };

    function initMap() {

            var map = new google.maps.Map(
                document.getElementById('map'), {
                zoom: 14, center: currentLocation
            });
        document.getElementById("endYourWalk").addEventListener("click", () => {
            prepareRouteWaypoints();
        })
            google.maps.event.addListener(map, 'rightclick', function (event) {

                var marker = new google.maps.Marker({
                    position: event.latLng, //map Coordinates where user right clicked
                    map: map,
                    draggable: true, //set marker draggable
                    animation: google.maps.Animation.DROP, //bounce animation
                });
                //Content structure of info Window for the Markers
                var contentString = $('<div class="marker-info-win">' +
                    '<div class="marker-inner-win">' +
                    '<form><div class="form-group"><input class="form-control form-control-sm" type="text" id="markerName" placeholder="Name Your Marker"></div>' +
                    '<div class="form-group"><select class="form-control form-control-sm" id="markerCategory"><option value="" disabled selected hidden>Select a Category</option>' +
                    '<option value="StartPoint">Starting Point</option>' +
                    '<option value="Wildlife">Wildlife</option>' +
                    '<option value="Landmark">Landmark</option>' +
                    '<option value="Highlight">Highlight</option>' +
                    '<option value="EndPoint">Ending Point</option></select></div>' +
                    '<div class="form-group"><textarea class="form-control form-control-sm" id="markerDescription" rows="2" placeholder="Enter a Description"></textarea></div></form>' +
                    '<button name="save-marker" class="save-marker badge badge-lrg badge-primary" id="saveButton" title="Save this Marker">Save</button>' +
                    '<button name="remove-marker" class="remove-marker badge badge-lrg badge-secondary" id="deleteButton" title="Remove this Marker">Delete</button></div></div>');

                //Create an infoWindow
                var infowindow = new google.maps.InfoWindow();

                //set the content of infoWindow
                infowindow.setContent(contentString[0]);

                //add click listner to marker which will open infoWindow
                google.maps.event.addListener(marker, 'click', function () {
                    infowindow.open(map, marker); // click on marker opens info window
                });


                var removeBtn = contentString.find('button.remove-marker')[0];
                //Find save button in infoWindow
                var saveBtn = contentString.find('button.save-marker')[0];
                google.maps.event.addDomListener(removeBtn, "click", function (event) {
                    marker.setMap(null);
                });

                google.maps.event.addDomListener(saveBtn, "click", function (event) {

                    saveBtn.style.display = "none";
                    var markerName = document.getElementById("markerName").value;
                    var markerCategory = document.getElementById("markerCategory").value;
                    var markerDescription = document.getElementById("markerDescription").value;
                    var routeId = parseInt(document.getElementById('hiddenRouteId').value);
                    var markerLat = marker.position.lat();
                    var markerLong = marker.position.lng();

                    if (markerName == '' || markerDescription == '' || markerCategory == '') {
                        alert("Please fill out all fields before saving!");
                    } else {
                        if (infowindow) {
                            infowindow.close();
                        }
                        createNewMarker(marker, markerName, markerCategory, markerDescription, markerLat, markerLong, routeId);
                    }
                });
            });

    }

    function createDirections(startPoint, endPoint, waypts) {
        var directionsService = new google.maps.DirectionsService();
        var directionsRenderer = new google.maps.DirectionsRenderer();
        var map2 = new google.maps.Map(
            document.getElementById('map2'), {
            zoom: 16, center: currentLocation
        });
        directionsRenderer.setMap(map2);

        directionsService.route(
            {
                origin: startPoint,
                destination: endPoint,
                waypoints: waypts,
                optimizeWaypoints: true,
                travelMode: google.maps.TravelMode.WALKING
            },
            (response, status) => {
                if (status === "OK") {
                    directionsRenderer.setDirections(response);
                    const route = response.routes[0];
                    computeTotalDistanceTime(response);
                }
                else {
                    alert("Directions request failed");
                }
            }
        );
    }
  
</script>




